[
{
	"uri": "/endpoints/auth.html",
	"title": "Authentication",
	"tags": [],
	"description": "",
	"content": " The authentication endpoints are used to authenticate against the API. If you have been given an access-token you can use that instead.\nEndpoints  /user/login /user/logout  /user/login     User authentication     URL /user/login   Method POST   Content type application/json   Body/Data {\u0026quot;username\u0026quot;: \u0026quot;your username\u0026quot;, \u0026quot;password\u0026quot;: \u0026quot;your password\u0026quot;}   Success response HTTP Status 200\nContent-Type: application/json\nContent: {\u0026quot;display_name\u0026quot;:\u0026quot;your name\u0026quot;}   Error response HTTP Status 401: Invalid credentials   Sample call curl https://gui.cloud.niradynamics.se/api2018/user/login -H \u0026quot;Content-Type: application/json\u0026quot; -X POST -d '{\u0026quot;username\u0026quot;:\u0026quot;your username\u0026quot;, \u0026quot;password\u0026quot;:\u0026quot;your password\u0026quot;}'   Notes You will get a cookie AUTH_SESSION. Make sure you attach AUTH_SESSION to subsequent requests. The AUTH_SESSION is valid for a week. Every time you make a request to an endpoint you will get a new AUTH_SESSION, meaning it will be refreshed for another week.    /user/logout     Terminate user session     URL /user/logout   Method POST   Success response HTTP Status 200   Error response None   Sample call curl https://gui.cloud.niradynamics.se/api2018/user/logout   Notes This endpoint terminates the current session.    "
},
{
	"uri": "/general.html",
	"title": "General",
	"tags": [],
	"description": "",
	"content": " General Welcome to the documentation of NIRA\u0026rsquo;s Road Surface Information API.\nYou can directly view the endpoint documentation here.\nTo test the API, read here.\nTechnical Terms  Base url: The URL prefix for each api endpoint. Link: A stretch of road in the road geometry.  Link id: A unique id assigned to each link.  Sub-link id: Identifier for a specific part of a link. Offset: Identifies a specific part of a link (similar to sub-link) but is more dynamic. Tile: A defined area boundary in the world, read more. Data bundle: A named bundle of data values that NIRA provides, correlated to the road geometry.  Revision History 2022-05-16  Documentation added.  2022-05-18  Renamed protobuf se.niradynamics.ncs.protobuf.output.Tile to se.niradynamics.ncs.protobuf.output.RoadLayerGeometryTile.  "
},
{
	"uri": "/endpoints/data-bundles.html",
	"title": "Data Bundle Permissions",
	"tags": [],
	"description": "",
	"content": " The data bundles endpoint is used to fetch data bundles, referred as bundle_name in the API documentation, which you have access to.\nIt will also describe if there are any restrictions in time or regions that you have access to.\nTo get more details about each bundle_name read about it here\nEndpoints  /user/data-bundles  user/data-bundles     Data Bundles Permissions     URL /user/data-bundles   Method GET   Success response HTTP Status 200\nContent-Type: application/json\nContent: [{\u0026quot;bundle_name\u0026quot;:\u0026quot;road-segment-aggregation-2\u0026quot;,\u0026quot;session\u0026quot;:5,\u0026quot;start_time\u0026quot;:\u0026quot;2022-03-26T00:00:00.000Z\u0026quot;,\u0026quot;end_time\u0026quot;:null,\u0026quot;regions\u0026quot;:[],\u0026quot;additional_regions\u0026quot;:[]}]   Error response HTTP Status 401: Invalid credentials   Sample call curl 'https://gui.cloud.niradynamics.se/api2018/user/data-bundles' -H 'cookie: cookie-agreed=2; AUTH_SESSION=THE_AUTH_SESSION_CONTENT'    "
},
{
	"uri": "/general/tile-documentation.html",
	"title": "Tile Concept Explained",
	"tags": [],
	"description": "",
	"content": " What is a Tile? A common technique to display maps on a computer is to divide the map into a grid (XY-plane) of rectangles. Each rectangle in this grid is called a map tile and together the grid becomes a tile grid.\nThis enables a map application to only load visible tiles instead of the entire map. How the grid is constructed is determined by the map creator. To refer to a specific tile it is common to either use the XY-planes respective X and Y coordinate or to have a tile-id that combines the plane coordinate into a single number.\nIn most map applications the end user can also zoom to get a more detailed view of a specific area. This zoom is commonly referred to as level, zoom-level or z-axis. Thereby, to refer to a specific tile one needs to supply both the tile reference and the zoom.\nFor example, the definition of a HERE-tile is a combination of a tile-id and level. For Mapbox vector tiles one instead uses a combination of X,Y,Z coordinates.\nNIRA\u0026rsquo;s API contains two tile definitions, one definition for the HERE-tile based API and one for the Mapbox vector tile API.\nHERE-Tile For HERE-tiles, please read the HERE documenation.\nNote how to calculate the tile id as that is used in the request to the APIs. Code examples of this can be seen in our code examples page.\nMapbox Vector Tile For vector tiles, please read the documentation at Mapbox own site. However, if using a library with support for Mapbox vector tile the intricacy of tiles is most likely handled by the library.\nSpecial things to note is the chapter of clipping.\nNote: Encoded geometry in vector tiles can extend beyond the boundary of the tile. This means features are not required to be clipped. Also note that the vector tile geometry is in relative coordinates to the vector tile itself as described in the geometry section.\n"
},
{
	"uri": "/general/authentication.html",
	"title": "Authentication",
	"tags": [],
	"description": "",
	"content": " Authentication Overview There are two different ways to authenticate against the API endpoints. The first way is a normal login process. This process is to be used if you have been given a username and password.\nThe second way is to use an API Access-Token. This token is generated by NIRA and not the end user, so unless you have been given one, use the login authentication process.\nLogin Authentication Process By calling the login endpoint with your username and password you will be given an AUTH_SESSION cookie in return.\nAttach the AUTH_SESSION cookie to subsequent request. The AUTH_SESSION is valid for a week. Every time you make a request to an endpoint you will get a new AUTH_SESSION, meaning it will be refreshed for another week.\nAccess-Token Authentication Process With an Access-Token you authenticate by one of the following ways:\n Supply the access-token as a GET-parameter Example: https://someurl.com/myurl?access_token=\u0026lt;access_token\u0026gt; Supply the token in the Authorization header according to RFC6750 Example: Authorization: Bearer \u0026lt;access_token\u0026gt;  "
},
{
	"uri": "/endpoints/here-tile-offset.html",
	"title": "Here-Tile Offset",
	"tags": [],
	"description": "",
	"content": " The structure of Here-Tile offset uses the concept of offset and the structure of data is similar to Here-Tile sublink. This means that in order to identify the location of a data point, the data is correlated with a road id and an offset from that road\u0026rsquo;s start position. To calculate the segment (if both start and end offset are used) or the point, calculate the position of the offset by following the road geometry. This is done in the following way:\n Start offset as percent of link length from start End offset as percent of link length from end (in order to save space with 0-value)  Pay extra attention to the difference between startOffset and endOffset:\n startOffset is measured from the start of the link endOffset is measured from the end of the link  Examples:\n If startOffset = 0.25 and endOffset = 0.25, then 25% to 75% from the start of the link is selected (in total 50% of the link covered) If startOffset = 0.25 and endOffset = 0 then 25% to 100% from the start of the link is selected (in total 75% of the link covered) If startOffset = 0.75 and endOffset = 0.75, then 25% to 75% from the start of the link is selected And the direction of travel is reversed.  An image demonstrating \u0026ldquo;startOffset\u0026rdquo; and \u0026ldquo;endOffset\u0026rdquo; is available here: roadLayerOffsets.png This API also separates the data from the underlying road network geometry. This reduces the size of the requests as the geometry can be fetched once instead of each time.\nEndpoints  /tiles/roadlayer /tiles/roadlayer-geometry  /tiles/roadlayer     Road layer tiles     URL /tiles/roadlayer/:bundle_name/:tile_id/:timestamp   Method GET   URL params bundle_name: see /user/data-bundles\ntile_id: Computed Tile Id (see code examples).\ntimestamp: ISO-8601 string with the UTC date and time for the data to fetch.   Success response HTTP Status 200\nContent-Type: application/x-protobuf\nContent: Serialized se.niradynamics.ncs.protobuf.output.RoadLayerTile.proto data   Error response HTTP Status 401: Invalid session.\nHTTP Status 403: Not authorized to perform the request. Possible reasons: the bundle_name is invalid, or the timestamp requested is outside of your boundaries, or the tile_id area is outside your geographic boundaries.\nHTTP Status 404: No tile generated, ie. no data available for the request. Either there is no data available for this area, or the generation is not yet available.   Sample call curl 'https://gui.cloud.niradynamics.se/api2018/tiles/roadlayer/road-segment-aggregation-2/23642645/2021-12-03T08:00:00Z' -H 'cookie: cookie-agreed=2; AUTH_SESSION=THE_AUTH_SESSION_CONTENT'    /tiles/roadlayer-geometry     Geometry tiles     URL /tiles/roadlayer-geometry/:geometry_reference/:tile_id?version=   Method GET   URL params geometry_reference: Reference to which map to use. It should be the value taken from the response from the roadlayer tile request. tile_id: Computed Tile Id (see code examples).   Query params version (optional): Should be set to the same as given in roadlayer tile (or left out if none is set).   Success response HTTP Status 200\nContent-Type: application/x-protobuf\nContent: Serialized se.niradynamics.ncs.protobuf.output.RoadLayerGeometryTile.proto data.   Error response HTTP Status 400: Bad Request. If no version parameter was supplied but the map reference required version information.\nHTTP Status 401: Invalid auth session\nHTTP Status 403: Not authorized to perform the request. Possible reasons: the geometry_reference is invalid, or the tile_id area is outside your geographic boundaries.\nHTTP Status 404: No tile generated, ie. there is no data available for this area.   Sample calls curl 'http://gui.cloud.niradynamics.se/api2018/tiles/roadlayer-geometry/hrn:here:data::olp-here:here-optimized-map-for-location-library-2/23642688?version=2464' -H 'cookie: cookie-agreed=2; AUTH_SESSION=THE_AUTH_SESSION_CONTENT'    "
},
{
	"uri": "/general/data-bundles.html",
	"title": "Data Bundles",
	"tags": [],
	"description": "",
	"content": " Data Bundles Below you will find a description about the different data bundles which are available in the NIRA API. The names of these different data bundles are referred to as bundle_name in the API endpoint documentation. Note that you might not have permission to fetch data from all data bundles listed here.\nroad-segment-aggregation-2 The road-segment-aggregation-2 bundle contains layers with friction information. For this bundle, the available timestamp is in 10 minute increments and the data is produced with a delay of around 10 minutes.\nThis bundle should be used when fetching data newer than 2021-11-01.\n   Exported Layers Description     Friction-Average Friction value   Friction-StandardDeviation Uncertainty of the friction value    road-segment-aggregation Contains the same information as road-segment-aggregation-2, but this bundle should be used when fetching data older than 2021-11-01.\n   Exported Layers Description     Friction-Average Friction value   Friction-StandardDeviation Uncertainty of the friction value    road-surface-conditions-2 The road-surface-conditions-2 bundle contains layers with friction and road weather information. For this bundle, the available timestamp is in 10 minute increments and the data is produced with a delay of around 10 minutes.\nThis bundle should be used when fetching data newer than 2021-10-01.\n   Exported Layers Description     Expected-Friction The most likely coefficient of friction, between 0 and 1.2.   Worst-Case-Friction The worst case (unlikely, but still possible) coefficient of friction, between 0 and 1.2.   Expected-Road-Weather The most likely road weather condition, see weather classes below.   Worst-Case-Road-Weather The worst case (unlikely, but still possible) road weather condition, see weather classes below.   Quality-Index The combined quality for the output, based on availability, confidence and agreement of different data sources. Between 0 (low quality) and 1 (high quality).   Available-Input-Sources Which data sources that were used to produce this output.    road-surface-conditions Contains the same information as road-surface-conditions-2, but this bundle should be used when fetching data older than 2021-10-01.\n   Exported Layers Description     Expected-Friction The most likely coefficient of friction, between 0 and 1.2.   Worst-Case-Friction The worst case (unlikely, but still possible) coefficient of friction, between 0 and 1.2.   Expected-Road-Weather The most likely road weather condition, see weather classes below.   Worst-Case-Road-Weather The worst case (unlikely, but still possible) road weather condition, see weather classes below.   Quality-Index The combined quality for the output, based on availability, confidence and agreement of different data sources.Between 0 (low quality) and 1 (high quality).   Available-Input-Sources Which data sources that were used to produce this output.    roughness-long-term-aggregation The roughness-long-term-aggregation bundle contains roughness layers according to International Roughness Index (IRI). The Long-term-Roughness layer contains values based on data from a longer time period of vehicle reports, and the Current-Roughness layer reports values based on only the most recent vehicle data.\nFor this bundle, data is currently produced once every day, and it is available after 07:00 UTC on the following day. That is, the requested timestamp should be the midnight of the day considered: 2021-10-01T00:00:00Z, and the data for that day is available on 2021-10-02 after 7:00 UTC.\n   Exported Layers Description     Current-Roughness IRI values [$mm/m$] based on the most recent vehicle data   Long-term-Roughness IRI values [$mm/m$] aggregated over a longer time period    maintenance-aggregation The maintenance-aggregation bundle contains layers with friction information targeting winter road maintenance. For this bundle, the available timestamp is in 10 minute increments, and the data is produced with a delay of around 10 minutes.\n   Exported Layers Description     Confidence A number from 1-3 indicating the confidence level of the friction information. 3 means the highest confidence, and 1 means the lowest confidence.   Friction-Average Friction average   Friction-Average-StandardDeviation Standard deviation of the friction average   Friction-Max Maximum experienced friction   Friction-Min Minimum experienced friction   HighestTGPWeight Internal signal   NumberOfTGPs Number of friction measurements (Tire Grip Points)    surface-temperature-estimation The surface-temperature-estimation bundle contains layers with road surface temperature and weather information. For this bundle, the available timestamp is in 10 minute increments, and the data is produced with a delay of around 18 minutes.\n   Exported Layers Description     RoadSurfaceTemperature-MachineLearning Calculated road surface temperature [\u0026deg;C]   Confidence A number 0-10 indicating the confidence level of the calculated road surface temperature. 10 means highest confidence   Temperature-Average Average air temperature from vehicles [\u0026deg;C]   CloudCoverage Cloud coverage [%]   Irradiance Solar irradiance [$W/m^2$]    obstacle-aggregation The obstacle-aggregation bundle contains layers with road obstacle information. For this bundle, the available timestamp is in 1 hour increments, and the data is produced with a delay of around 30 minutes.\n Data for this bundle can only be fetched using the Mapbox Vector Tile API. This is the case since the obstacle data is point based and is not suited for the HERE-tile sublink or HERE-tile offset APIs. The latter two APIs work with road segments and not points.     Exported Layers Description     obstacleType Type of obstacle, either pothole, bump or unknown   obstaclePosition Position of the obstacle, either left, right, both or unknown   timeSinceFirstDetection Time since first detection relative to chosen timestamp [ms]   timeSinceLastDetection Time since last detection relative to chosen timestamp [ms]    "
},
{
	"uri": "/endpoints/here-tile-sublink.html",
	"title": "Here-Tile Sublink",
	"tags": [],
	"description": "",
	"content": " The Here-Tile sublink API divides the road network into sublinks. A sublink is a road (called link in this case) that has been split into one or more subsegments. The maximum length of a sublink depends on the data-bundle. The length of a sublink decides the highest resolution the data will be supplied at. Each road is divided into sublinks of equal length.\nThis API also separates the data from the underlying road network geometry. This reduces the size of the requests as the geometry can be fetched once instead of each time.\nEndpoints  /tiles/aggregated /tiles/geometry  /tiles/aggregated     Aggregated tiles     URL /tiles/aggregated/:bundle_name/-1/:tile_id/:timestamp/5/-1   Method GET   URL params bundle_name: see /user/data-bundles\ntile_id: Computed Tile Id (see code examples).\ntimestamp: ISO-8601 string with the UTC date and time for the data to fetch.   Success response HTTP Status 200\nContent-Type: application/x-protobuf\nContent: Serialized se.niradynamics.ncs.protobuf.aggregated.AggregatedTile.proto data.   Error response HTTP Status 401: Invalid auth session.\nHTTP Status 403: Not authorized to perform the request. Possible reasons: the bundle_name is invalid, or the timestamp requested is outside of your boundaries, or the tile_id area is outside your geographic boundaries.\nHTTP Status 404: No tile generated, ie. no data available for the request. Either there is no data available for this area, or the generation is not yet available.   Sample call curl 'https://gui.cloud.niradynamics.se/api2018/tiles/aggregated/road-segment-aggregation/-1/23642346/2019-06-26T09:30:00Z/5/-1' -H 'cookie: cookie-agreed=2; AUTH_SESSION=THE_AUTH_SESSION_CONTENT'    /tiles/geometry     Geometry tiles     URL /tiles/geometry/:geometry_reference/:tile_id?version=   Method GET   URL params geometry_reference: Reference to what map to use. It should be the value taken from the response from the aggregated tile request. tile_id: Computed Tile Id (see code examples).   Query params version (optional): Should be set to the same as given in aggregated tile (or left out if none is set).   Success response HTTP Status 200\nContent-Type: application/x-protobuf\nContent: Serialized se.niradynamics.ncs.protobuf.geometry.GeometryTile.proto data.   Error response HTTP Status 400: Bad Request. If no version parameter was supplied but the map reference required version information.\nHTTP Status 401: Invalid auth session.\nHTTP Status 403: Not authorized to perform the request. Possible reasons: the geometry_reference is invalid, or the tile_id area is outside your geographic boundaries.\nHTTP Status 404: No tile generated, ie. there is no data available for this area.   Sample call curl 'https://gui.cloud.niradynamics.se/api2018/tiles/geometry/here.navstreet.S181R4_with_OSM_EHRA_Track-nira.25m.2019-02-11/23642688' -H 'cookie: cookie-agreed=2; AUTH_SESSION=THE_AUTH_SESSION_CONTENT'    "
},
{
	"uri": "/general/protobuf-documentation.html",
	"title": "Google Protocol Buffer Explained",
	"tags": [],
	"description": "",
	"content": " Google Protocol Buffer (Proto) You can read what Protocol Buffers (Proto, Protobuf) are at Google\u0026rsquo;s documentation. NIRA uses them as the return response from the HERE-tile APIs (it is also used for Mapbox Vector tile) to package the data in a compact format. The output from these APIs will be in binary format which you will need a declaration of the .proto format used to decode.\nNIRA supplies different .proto files depending on the API used. See list below.\nProtocol Buffer Files  HERE-tile offset  here-tile-offset.zip   HERE-tile sublink  here-tile-sublink.zip   Mapbox vector tile  Provided by Mapbox, but also found here vector_tile.proto    Decoding NIRA Protocol Buffer Get a hold of a binary data file from the NIRA API, see testing the API.\nThese binary files can then be decoded using code or the program protoc. Unpack the protobuf definition zip-file corresponding to the API the binary data file came from. Move the binary file to the extracted folder and rename it response.bin Standing inside the extracted folder one can then call the following commands:\nHere Tile Offset If response.bin is an roadlayer tile protoc \\ -I Path/to/here-tile-offset/ --decode se.niradynamics.ncs.protobuf.output.RoadLayerTile \\ se/niradynamics/ncs/protobuf/output/RoadLayerTile.proto \\ \u0026lt; response.bin If response.bin is a roadlayer-geometry tile protoc \\ -I Path/to/here-tile-offset/ --decode se.niradynamics.ncs.protobuf.output.RoadLayerGeometryTile \\ se/niradynamics/ncs/protobuf/output/RoadLayerGeometryTile.proto \\ \u0026lt; response.bin Here Tile Sublink If response.bin is an aggregated tile protoc \\ -I Path/to/here-tile-sublink/ --decode se.niradynamics.ncs.protobuf.aggregated.Tile \\ se/niradynamics/ncs/protobuf/aggregated/AggregatedTile.proto \\ \u0026lt; response.bin If response.bin is a geometry tile protoc \\ -I Path/to/here-tile-sublink/ --decode se.niradynamics.ncs.protobuf.geometry.Tile \\ se/niradynamics/ncs/protobuf/geometry/GeometryTile.proto \\ \u0026lt; response.bin Mapbox Vector Tile protoc \\ -I Path/to/directory/ --decode vector_tile.Tile \\ vector_tile.proto \\ \u0026lt; response.bin"
},
{
	"uri": "/endpoints/mapbox-vector-tile.html",
	"title": "Mapbox Vector Tile",
	"tags": [],
	"description": "",
	"content": " The Mapbox vector tile API is an easy-to-use format as it is supported by many rendering libraries. It contains both the geometry and the data. This API is suitable for graphical interfaces but not for data scraping as it always downloads the geometry of the road segments.\nEndpoints  /tiles/vector/example /tiles/vector/aggregated /obstacles/vector/obstacle-aggregation  /tiles/vector/example     Mapbox vector tile example     URL /tiles/vector/example/:level/:column/:row   Method GET   Description This vector tile layer displays a layer that requires no authentication or permission to use.   URL Params level: Zoom to request tiles for.\ncolumn: Column position of the tile.\nrow: Row position of tile.   Success response HTTP Status 200\nContent-Type: application/x-protobuf\nContent: Serialized vector_tile.Tile.proto data   Sample call curl 'https://gui.cloud.niradynamics.se/api2018/tiles/vector/example/1/1/1'   Notes This vector tile layer should display the text NIRA and require no authentication.    /tiles/vector/aggregated     Mapbox vector tile aggregated layer     URL /tiles/vector/aggregated/:bundle_name/:level/:column/:row   Method GET   Description Fetches a vector tile with geometry enriched with he data from the bundle.   URL Params bundle_name: see /user/data-bundles\nlevel: Zoom to request tiles for.\ncolumn: Column position of the tile. row: Row position of tile.   Query Params time (optional): Specifies the start time to fetch data for\nend_time (optional): Specifies the end time for the interval to fetch data for.   Success response HTTP Status 200\nContent-Type: application/x-protobuf\nContent: Serialized vector_tile.Tile.proto data   Error response HTTP Status 400: Bad Request, zoom level is too high so it would request too much data.\nHTTP Status 401: Invalid auth session.\nHTTP Status 403: Not authorized to perform the request. Possible reasons: the bundle_name is invalid, or the tile_id area is outside your geographic boundaries.\nHTTP Status 404: No tile generated, ie. there is no data available for this area.    /obstacles/vector/obstacle-aggregation  This endpoint requires synchronous requests when data scraping since it is not optimized for handling multiple asynchronous requests.      Mapbox vector tile obstacles layer     URL /obstacles/vector/obstacle-aggregation/:level/:column/:row   Method GET   Description Fetches a vector tile with geometry enriched with he data from the bundle.   URL Params level: Zoom to request tiles for. column: Column position of the tile. row: Row position of tile.   Query Params time (optional): Specifies the time to fetch data for.   Success response HTTP Status 200\nContent-Type: application/x-protobuf\nContent: Serialized vector_tile.Tile.proto data   Error response HTTP Status 400: Bad Request, zoom level is to high so it would request too much data.\nHTTP Status 401: Invalid auth session\nHTTP Status 403: Not authorized to perform the request. Possible reasons: the tile_id area is outside your geographic boundaries.\nHTTP Status 404: No tile generated, ie. there is no data available for this area.    "
},
{
	"uri": "/general/api-testing.html",
	"title": "Test the API",
	"tags": [],
	"description": "",
	"content": " Overview NIRA provides an OpenAPI 3.0 specification file that can be used with your favorite testing program. The tool we will use is Postman.\nAdditionally, you will need a tool for decoding the protobuf response files. We will use Protoc.\nTest with Postman  Download API definition here . Download Postman. Import the API definition into Postman.  During import click on \u0026ldquo;Show advanced settings\u0026rdquo; and change the following:  \u0026ldquo;Naming requests\u0026rdquo; to URL. \u0026ldquo;Request parameter generation\u0026rdquo; to Schema. \u0026ldquo;Folder organization\u0026rdquo; to Tags.   Use the Authentication endpoint /user/login to get a valid AUTH_SESSION cookie. Get your Data Bundle Permissions you with the /user/data-bundles endpoint. Fetch data with one of the APIs described here.  Save the response to a file called response.bin.  Decode response.bin with the necessary protobuf file described here.  "
},
{
	"uri": "/general/code.html",
	"title": "Code Examples",
	"tags": [],
	"description": "",
	"content": " Code Examples Below are some code examples to do specific operations related to the API.\nComputing Tile Id Scala val LonRange = 360 val LatRange = 180 def getTileId(lat: Double, lon: Double, zoomLevel: Int): Long = { // find x,y tile indexes  val x: Int = scala.math .floor((lon + LonRange / 2) / getDegreesPerTile(zoomLevel)) .toInt val y: Int = scala.math .floor((lat + LatRange / 2) / getDegreesPerTile(zoomLevel)) .toInt interleaveAndGetTileId(zoomLevel, x, y) } private def getDegreesPerTile(zoomLevel: Int): Double = LonRange / scala.math.pow(2, zoomLevel.toDouble) private def interleaveAndGetTileId(zoomLevel: Int, x: Int, y: Int): Long = { // Interleave x and y, starting with y  val interleaved: Long = interleave(y, x) // Prepend 1 to indicate zoom level  (1L \u0026lt;\u0026lt; (zoomLevel \u0026lt;\u0026lt; 1)) | interleaved } private def interleave(y: Int, x: Int): Long = { (interleaveWithZero(y) \u0026lt;\u0026lt; 1) | interleaveWithZero(x) } private def interleaveWithZero(value: Int): Long = { var res = value.toLong res = (res | (res \u0026lt;\u0026lt; 16)) \u0026amp; 0x0000ffff0000ffffL res = (res | (res \u0026lt;\u0026lt; 8)) \u0026amp; 0x00ff00ff00ff00ffL res = (res | (res \u0026lt;\u0026lt; 4)) \u0026amp; 0x0f0f0f0f0f0f0f0fL res = (res | (res \u0026lt;\u0026lt; 2)) \u0026amp; 0x3333333333333333L (res | (res \u0026lt;\u0026lt; 1)) \u0026amp; 0x5555555555555555L } /* Test your implementation with the following test vectors: getTileId(52.5250754, 13.3693737, 12) : 23618402 getTileId(-23.551205, -46.632264, 12) : 18480753 getTileId(-33.86663, 151.20578, 12) : 22835176 getTileId(37.774888, -122.417844, 12) : 19319031 getTileId(51.470716, 0.057873, 12) : 23601282 getTileId(51.470716, -0.057873, 12) : 20805079 getTileId(-84.491114, -156.325441, 12) : 16845561 getTileId(52.52507, 13.36937, 12) : 23618402 getTileId(52.52507, 13.36937, 14) : 377894440 */ Python: LON_RANGE = 360 LAT_RANGE = 180 HALF_LON_RANGE = LON_RANGE / 2 HALF_LAT_RANGE = LAT_RANGE / 2 def get_tile_id(lat, lon, zoom_level): x = int((lon + HALF_LON_RANGE) / get_degrees_per_tile(zoom_level)) y = int((lat + HALF_LAT_RANGE) / get_degrees_per_tile(zoom_level)) return __interleave(x, y, zoom_level) def __interleave(x, y, zoom_level): interleaved = 0 for i in range(zoom_level): interleaved |= ((y \u0026amp; (1 \u0026lt;\u0026lt; i)) \u0026lt;\u0026lt; (i + 1)) interleaved |= ((x \u0026amp; (1 \u0026lt;\u0026lt; i)) \u0026lt;\u0026lt; i) return (1 \u0026lt;\u0026lt; (2 * zoom_level)) | interleaved def get_degrees_per_tile(zoom_level): return LON_RANGE / 2**zoom_level JavaScript For javascript we recommend using HERE\u0026rsquo;s @here/harp-geoutils library:\nimport { TileKey, TileKeyUtils, hereTilingScheme } from \u0026#39;@here/harp-geoutils\u0026#39; // From (lat, lon, zoom level) to tile id: const fromGeo = TileKeyUtils.geoCoordinatesToTileKey(hereTilingScheme, { latitude: 57.646790, longitude: 12.015499, }, 12) fromGeo.toHereTile() // \u0026#39;23642346\u0026#39;  Decoding Integer Representation of Lat/Lon Coordinates Scala val LatRange = 180 val LonRange = 360 val LatResolution: Double = 2L \u0026lt;\u0026lt; 30 val LonResolution: Double = 2L \u0026lt;\u0026lt; 31 def decodeIntToLat(latInt: Int): Double = { latInt * (LatRange / LatResolution) } def decodeIntToLon(lonInt: Int): Double = { lonInt * (LonRange / LonResolution) } /* Test your implementation with the following test vectors: decodeIntToLat(latInt = 626648558) : 52.5250754 decodeIntToLon(lonInt = 159502841) : 13.3693737 decodeIntToLat(latInt = -280976821) : -23.551205 decodeIntToLon(lonInt = -556344581) : -46.632264 decodeIntToLat(latInt = -404044635) : -33.86663 decodeIntToLon(lonInt = 1803955222) : 151.20578 decodeIntToLat(latInt = 450671968) : 37.774888 decodeIntToLon(lonInt = -1460501768) : -122.417844 */ Python: def decodeLatLon(lat, lon): lat_range = 180 lon_range = 360 lat_res = 2 \u0026lt;\u0026lt; 30 lon_res = 2 \u0026lt;\u0026lt; 31 lat = lat * lat_range/lat_res lon = lon * lon_range/lon_res return (lat, lon) JavaScript const LonRange = 360 const LatRange = 180 const LatFactor = LatRange / Math.pow(2, 31) const LonFactor = LonRange / Math.pow(2, 32) function decodeIntToLat(latInt) { return latInt * LatFactor } function decodeIntToLon(lonInt) { return lonInt * LonFactor }"
},
{
	"uri": "/_footer.html",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/categories.html",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/",
	"title": "Customer API",
	"tags": [],
	"description": "",
	"content": " General General Welcome to the documentation of NIRA\u0026rsquo;s Road Surface Information API. You can directly view the endpoint documentation here. To test the API, read here. Technical Terms Base url: The URL prefix for each api endpoint. Link: A stretch of road in the road geometry. Link id: A unique id assigned to each link. Sub-link id: Identifier for a specific part of a link. Offset: Identifies a specific part of a link (similar to sub-link) but is more dynamic.\n   \n  Endpoints Endpoints These pages describe the different endpoints NIRA supplies. The base URL for all endpoints are located under: https://gui.cloud.niradynamics.se/api2018/ Different Types of APIs NIRA currently provides three different APIs that can be used depending on the use case. HERE-Tile Offset This API separates the map geometry and the data from the NIRA products. This API provides two endpoints, one endpoint for the map geometry and one for the data.\n  "
},
{
	"uri": "/endpoints.html",
	"title": "Endpoints",
	"tags": [],
	"description": "",
	"content": " Endpoints These pages describe the different endpoints NIRA supplies.\nThe base URL for all endpoints are located under:\nhttps://gui.cloud.niradynamics.se/api2018/ Different Types of APIs NIRA currently provides three different APIs that can be used depending on the use case.\nHERE-Tile Offset This API separates the map geometry and the data from the NIRA products.\nThis API provides two endpoints, one endpoint for the map geometry and one for the data.\nThe data is referenced to the map geometry by a world-unique link id, together with a start-offset and an end-offset, describing which fractions of the link the data is located at.\nThis API is suitable for reducing the data amount and for recurring downloading of data.\nHERE-Tile Sublink This API is similar to the Offset API but references the map geometry with a sub-link id instead of offsets.\nThere are more limitations in this way of referencing data to the map geometry and therefore we recommend using the Offset API instead.\nMapbox Vector Tile This API is suitable if you already have rendering libraries or applications supporting the Mapbox Vector Tile format.\nThis API is not intended to be used for recurring downloading of data. This is due to map geometry and data being bundled together, causing higher load and more transfer overhead.\n"
},
{
	"uri": "/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]